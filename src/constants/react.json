[
  {
    "id": 1,
    "category": "React",
    "description": "What is React?",
    "answer": "React is a JavaScript library for building user interfaces.",
    "wrongAnswers": [
      "React is a JavaScript framework for building user interfaces.",
      "React is a JavaScript framework for generating new components.",
      "React is a JavaScript library for tests."
    ]
  },
  {
    "id": 2,
    "category": "React",
    "description": "What are components in React?",
    "answer": "Components are independent and reusable pieces of UI.",
    "wrongAnswers": [
      "Components are used only for styling.",
      "Components cannot be reused.",
      "Components are mandatory in React."
    ]
  },
  {
    "id": 3,
    "category": "React",
    "description": "What is JSX in React?",
    "answer": "JSX is a syntax extension for JavaScript which allows mixing XML with JavaScript.",
    "wrongAnswers": [
      "JSX is a syntax extension for JavaScript which allows mixing CSS with JavaScript.",
      "JSX is a new way to write JavaScript and its not using vanilla JavaScript.",
      "JSX is mainly used when writing CSS in React."
    ]
  },
  {
    "id": 4,
    "category": "React",
    "description": "What is state in React?",
    "answer": "State is an object that stores component's dynamic data.",
    "wrongAnswers": [
      "State is only used for static data.",
      "State is used for passing data from father to son.",
      "State is only applicable to class components."
    ]
  },
  {
    "id": 5,
    "category": "React",
    "description": "What is the difference between props and state in React?",
    "answer": "Props are passed into components, while state is managed within the component.",
    "wrongAnswers": [
      "Props and state are the same thing.",
      "State cannot be changed while props can change from within the component.",
      "Props can only be used in functional components, while state can be used in classes."
    ]
  },
  {
    "id": 6,
    "category": "React",
    "description": "What are React Hooks?",
    "answer": "Hooks are functions that let you use React state and lifecycle features in functional components.",
    "wrongAnswers": [
      "Hooks are functions that let you use React dom manipulations in functional components.",
      "Hooks are classes that let you use React state and lifecycle features in functional components.",
      "Hooks are functions that let you use React state and lifecycle features in classes components."
    ]
  },
  {
    "id": 7,
    "category": "React",
    "description": "Explain the concept of virtual DOM in React.",
    "answer": "Virtual DOM is a lightweight copy of the real DOM used for performance optimization in React.",
    "wrongAnswers": [
      "Virtual DOM is a lightweight copy of the HTML index file used for performance optimization in React.",
      "Virtual DOM is a copy of the browser window object used for  optimization in React.",
      "Virtual DOM is only relevant for server-side rendering."
    ]
  },
  {
    "id": 8,
    "category": "React",
    "description": "What are the advantages of using React?",
    "answer": "Advantages include component reusability, virtual DOM for performance, and a declarative approach to building UI.",
    "wrongAnswers": [
      "Advantages include component reusability, real DOM support, and a declarative approach to building UI.",
      "Advantages include better framework design, real DOM support, and a sufficient routing.",
      "Advantages include top notch engineers, cool new features, and a very big community."
    ]
  },
  {
    "id": 9,
    "category": "React",
    "description": "What is the purpose of the 'key' attribute in React?",
    "answer": "The 'key' attribute is used to uniquely identify elements.",
    "wrongAnswers": [
      "The 'key' attribute is only used for styling purposes.",
      "The 'key' attribute is not supported in React.",
      "The 'key' attribute is used for defining component names."
    ]
  },
  {
    "id": 10,
    "category": "React",
    "description": "How does React handle events?",
    "answer": "React uses synthetic events that wrap native browser events.",
    "wrongAnswers": [
      "React doesn't support event handling.",
      "React uses native browser events directly without any abstraction.",
      "React only supports event handling in class components."
    ]
  },
  {
    "id": 11,
    "category": "React",
    "description": "What is the purpose of 'props.children' in React?",
    "answer": "'props.children' allows components to pass children elements directly into their output.",
    "wrongAnswers": [
      "'props.children' is used for styling components and only in JSX.",
      "'props.children' helps the developer rendering all the input as one value.",
      "'props.children' can only be used with class components, not relevant from React 16.8 and beyond."
    ]
  },
  {
    "id": 12,
    "category": "React",
    "description": "What are higher-order components (HOC) in React?",
    "answer": "HOCs are functions that take a component and return a new component with extended functionality.",
    "wrongAnswers": [
      "HOCs are used for styling in React, mainly used with CSS and special keywords.",
      "HOCs are components that gets a new function and return the same output quicker.",
      "HOCs are components that only render if their is a prop change and not state."
    ]
  },
  {
    "id": 13,
    "category": "React",
    "description": "What is conditional rendering in React?",
    "answer": "Conditional rendering is the ability to render different components or elements based on certain conditions.",
    "wrongAnswers": [
      "Conditional rendering is not possible in React this is a trick question.",
      "Conditional rendering is only when we use the switch keyword.",
      "Conditional rendering is only applicable to class components."
    ]
  },
  {
    "id": 14,
    "category": "React",
    "description": "What is the purpose of 'setState' method in React?",
    "answer": "'setState' is used to update the state of a component and trigger a re-render.",
    "wrongAnswers": [
      "'setState' is used for fetching data and return a response.",
      "'setState' can only be used in class components, functional component use ref.",
      "'setState' is a built-in JavaScript method to update the state."
    ]
  },
  {
    "id": 15,
    "category": "React",
    "description": "What is the significance of React Fragments?",
    "answer": "React Fragments allow grouping multiple elements without adding extra nodes to the DOM.",
    "wrongAnswers": [
      "React Fragments are used for defining component styles in the Jsx.",
      "React Fragments are used to group a lot of elements in one place.",
      "React Fragments are used to group functions together when called inside the render function."
    ]
  },
  {
    "id": 16,
    "category": "React",
    "description": "Explain the concept of 'controlled' vs 'uncontrolled' components in React.",
    "answer": "'Controlled' components have their value controlled by React, while 'uncontrolled' components manage their own state internally.",
    "wrongAnswers": [
      "'Controlled' components have their value controlled by React, while 'uncontrolled' components are usually class components.",
      "'Controlled' and 'uncontrolled' components are the same thing.",
      "'Controlled' components manage their own state internally, while 'uncontrolled' have their value controlled by React."
    ]
  },
  {
    "id": 17,
    "category": "React",
    "description": "What are React Lifecycle Methods?",
    "answer": "React Lifecycle Methods are special methods that provide different points in the lifecycle of a class based React component.",
    "wrongAnswers": [
      "React Lifecycle Methods are special methods that can be used ONLY in functional components.",
      "React Lifecycle Methods are special methods that provide different points in the lifecycle of a function based React component.",
      "Lifecycle methods can only be used in functional components and thats why useEffect is so confusing."
    ]
  },
  {
    "id": 18,
    "category": "React",
    "description": "What is the purpose of 'useEffect' hook in React?",
    "answer": "'useEffect' hook is used to perform side effects in functional components.",
    "wrongAnswers": [
      "'useEffect' hook is a hook that holds the state of the component.",
      "'useEffect' hook is used for defining component styles and current refs.",
      "'useEffect' hook is only applicable to class components and today we use lifecycle method."
    ]
  },
  {
    "id": 19,
    "category": "React",
    "description": "Explain the concept of 'lifting state up' in React.",
    "answer": "'Lifting state up' refers to the process of moving the state from child components to their closest common ancestor.",
    "wrongAnswers": [
      "'Lifting state up' is not a concept in React, this is a trick question!.",
      "'Lifting state up' is when we add the first state to a component.",
      "'Lifting state up' means isolating state within each component that is up the tree."
    ]
  },
  {
    "id": 20,
    "category": "React",
    "description": "What is the purpose of 'React Router' in React applications?",
    "answer": "'React Router' is a library that provides routing in React application.",
    "wrongAnswers": [
      "'React Router' is used for managing state in React applications.",
      "'React Router' is an alternative to React for building UI.",
      "'React Router' the name of the native routing in React."
    ]
  },
  {
    "id": 21,
    "category": "React",
    "description": "What is the main building block of a React application?",
    "answer": "Component",
    "wrongAnswers": ["Class", "Script", "Function"]
  },
  {
    "id": 22,
    "category": "React",
    "description": "How do you render content inside a React component?",
    "answer": "With nested components",
    "wrongAnswers": ["With console.log()", "With pure html and xml tags", "All of the above"]
  },
  {
    "id": 23,
    "category": "React",
    "description": "What is the JSX syntax for a simple text element saying \"Hello World\"?",
    "answer": "<p>Hello World</p>",
    "wrongAnswers": [
      "print(\"Hello World\")",
      "return \"Hello World\"",
      "<input>Hello World<input>"
    ]
  },
  {
    "id": 24,
    "category": "React",
    "description": "How do you pass data from one React component to another?",
    "answer": "With props",
    "wrongAnswers": ["With global variables", "With shared functions", "All of the above"]
  },
  {
    "id": 25,
    "category": "React",
    "description": "What is the purpose of the state in a React component?",
    "answer": "To store information about the component",
    "wrongAnswers": [
      "To define the layout of the component",
      "To handle events inside the component",
      "All of the above"
    ]
  },
  {
    "id": 26,
    "category": "React",
    "description": "Which lifecycle method is the most similar to useEffect with an empty dependency array?",
    "answer": "componentDidMount",
    "wrongAnswers": ["componentWillMount", "render", "constructor"]
  },
  {
    "id": 27,
    "category": "React",
    "description": "When does hooks were introduced to React?",
    "answer": "Version 16.8.",
    "wrongAnswers": ["Version 16.9.", "Version 17.0.", "Version 16.0."]
  },
  {
    "id": 28,
    "category": "React",
    "description": "What does the ReactDOM.render function do?",
    "answer": "Renders a React component to the DOM",
    "wrongAnswers": [
      "Fetches data from an API",
      "Updates the state of a component",
      "Manages routing in a React application"
    ]
  },
  {
    "id": 29,
    "category": "React",
    "description": "Which tool is commonly used for state management in a very large React applications?",
    "answer": "Redux",
    "wrongAnswers": ["Local Storage", "Cookies", "Context"]
  },
  {
    "id": 30,
    "category": "React",
    "description": "What is the benefit of using virtual DOM in React?",
    "answer": "Improved performance and less DOM manipulation",
    "wrongAnswers": [
      "Easier debugging and error handling",
      "More dynamic and interactive UI",
      "All of the above"
    ]
  }
]
